# CuliFeed .gitignore
# RSS Content Curation System

# =============================================================================
# Python
# =============================================================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# =============================================================================
# CuliFeed Application Specific
# =============================================================================

# Application Logs
logs/
*.log

# Database files
data/
*.db
*.sqlite
*.sqlite3

# Configuration with sensitive data
.env
.env.local
.env.production
config.local.yaml
config.production.yaml

# AI Provider API Keys and secrets
secrets/
.secrets/

# RSS Feed Cache and temporary data
cache/
temp/
tmp/
*.tmp

# Processing artifacts
processed_articles/
failed_articles/
article_cache/

# Bot session data
bot_sessions/
user_data/

# Monitoring and metrics data
metrics/
performance_logs/

# =============================================================================
# Development Tools
# =============================================================================

# IDE
.vscode/
.idea/
*.swp
*.swo
*~

# Claude MCP and development tools
.claude/
.serena/
claudedocs/

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Backup files
*.bak
*.backup
*.orig

# =============================================================================
# Deployment
# =============================================================================

# Docker
Dockerfile.local
docker-compose.override.yml

# Systemd service files with specific configurations
deployment/systemd/*.service.local

# Deployment scripts with sensitive data
deployment/scripts/*deploy*.local.sh
deployment/scripts/*secrets*.sh

# SSL certificates and keys
*.key
*.crt
*.pem
*.p12

# =============================================================================
# Temporary and Debug Files
# =============================================================================

# Debug output
debug_output/
debug_*.txt
debug_*.json

# Temporary processing files
processing_temp/
feed_temp/

# Test artifacts
test_data/temp/
test_outputs/

# Performance profiling
*.prof
*.pstats
profile_output/