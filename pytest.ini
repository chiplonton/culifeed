[pytest]
# ============================================================================
# CuliFeed Test Configuration
# ============================================================================
# Optimized for fast development workflow with proper test categorization

# Test Markers
# ------------
markers =
    unit: Fast unit tests with mocked dependencies (< 0.5s each)
    integration: Tests with real dependencies (APIs, network, databases)
    slow: Very slow tests (> 1s) - network calls, real API requests
    fast: Super fast tests (< 0.1s) - pure logic, no I/O
    ai: Tests that use real AI provider APIs
    network: Tests requiring network access
    database: Tests that use database (now fast with session fixtures)

# Default Test Selection
# ----------------------
# Run fast unit tests by default for rapid development
# Override with: pytest -m "integration" or pytest (no markers)

# Uncomment to run only fast tests by default:
# addopts = -m "not slow" --tb=short -v

# Test Discovery
# --------------
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test Output
# -----------
addopts =
    --tb=short
    -v
    --strict-markers
    --color=yes
    -ra

# Coverage (optional - uncomment to enable)
# -----------------------------------------
# addopts = --cov=culifeed --cov-report=term-missing --cov-report=html

# Async Tests
# -----------
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Performance
# -----------
# Uncomment to see slowest tests
# addopts = --durations=10

# Parallel Execution (requires pytest-xdist)
# ------------------------------------------
# Uncomment to run tests in parallel (4x faster)
# addopts = -n auto

# Test Paths
# ----------
testpaths = tests

# Warning Filters
# ---------------
filterwarnings =
    ignore::DeprecationWarning:pydantic.*
    ignore::DeprecationWarning:aiohttp.*
    ignore::DeprecationWarning:supervisor.*